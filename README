
Safe screening rules with approximate dictionaries
==================================================

>>> THIS IS A MODIFIED VERSION OF THE CODE PROVIDED BY ANTOINE BONNEFOY AT:
    http://pageperso.lif.univ-mrs.fr/~antoine.bonnefoy/?q=node/5
    - Concerning the publication "Dynamic Screening: accelerating First-order Algorithms for the Lasso and Group-Lasso." A. Bonnefoy et al.


This code corresponds to the following publications:

- "Dynamic Screening with Approximate Dictionaries" CF Dantas, R Gribonval - XXVIÃ¨me colloque GRETSI, 2017

- "Faster and still safe: combining screening techniques and structured dictionaries to accelerate the Lasso", CF Dantas, R Gribonval - ICASSP 2018


Installation
------------

1.  Clone this repository:

    $ git clone https://github.com/cassiofragadantas/Screening_ADST.git

2. Recompile the  'fast_mat_prod' cython function:

    $ cd dynascreen/ ; rm fast_mat_prod.so ; ./compile.sh
    
3. Run the desired experiment

    $ python -m experiments [EXP_NUM]
    
    where [EXP_NUMBER] is to be replaced the number of the desired experiment (see section Experiments).

This will generate the corresponding figures and place in the ResSynthData folder. Or for more help

    $ python -m experiments -h


Experiments
-----------

List of available experiments (its number is to be placed in [EXP_NUM] field).

Experiments concerning Bonnefoy's publication:
  
1. The screening progression. Number of preserved atoms as a function of the iteration, for one given regularization.
2. Normalized Running Times and Flops for a complete Lasso path.
3. Idem as 2 for the Group-Lasso .

Experiments concerning Dantas's GRETSI 2017 publication:

4. The screening progression (as 1, but including the screening with approximate dictionary).
5. Normalized Running Times and Flops for a complete Lasso path (as in 2, but including approximate dictionary)

Experiments concerning Dantas's ICASSP 2018 publication:

6. The screening progression (as 1 and 4, but with a SuKro fast dictionary and using the extended GAP sphere rule).
7. Normalized Running Times and Flops for a complete Lasso path (as in 2 and 5,  but with a SuKro fast dictionary and using the extended GAP sphere rule)
8. Colormap visualisation of the normaalized running time per iteration on a complete Lasso path.



Reproducing results from ICASSP and GRETSI papers
-------------------------------------------------

To be sure to work on the exact same version as in the ICASSP paper, simply clone the STABLE branch by replacing step 1 on the Installation section by the following command:
    
 $ git clone -b STABLE https://github.com/cassiofragadantas/Screening_ADST.git
 

For any question feel free to contact me at:
    cassio.fraga-dantas at inria dot fr 
 
